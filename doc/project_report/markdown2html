#!/usr/bin/env python

# Simple markdown to HTML converter using Strapdown.js
# Copyright (C) 2012 Gokcen Eraslan, Basak Eraslan, Javeria Ali
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import sys

# A neat HTML template from Strapdown.js project: http://strapdownjs.com
template = """
<!DOCTYPE html>
<html>
%(title)s

<xmp theme="%(theme)s" style="display:none;">

%(markdown)s

</xmp>

<script src="http://strapdownjs.com/v/0.1/strapdown.js"></script>
</html>
"""

parser = argparse.ArgumentParser(description="markdown2HTML converter.")

parser.add_argument("-t", "--theme", help="HTML theme of the output. "
                    "Possible values: amelia, cerulean, cyborg, journal, "
                    "readable, simplex, slate, spacelab, spruce, superhero, "
                    "united. Default value is united.")

parser.add_argument("-i", "--input", help="Input file in Markdown format.")
parser.add_argument("-o", "--output", help="Output file in HTML format.")
parser.add_argument("-T", "--title", help="Title of the HTML file.")

args = parser.parse_args()

input_file = open(args.input, "r") if args.input else sys.stdin
output_file = open(args.output, "w") if args.output else sys.stdout

template_dict = {}
template_dict["theme"] = args.theme or "united"
template_dict["title"] = ("<title>%s</title>"% args.title) \
                         if args.title else ""

template_dict["markdown"] = input_file.read()

output_file.write(template % template_dict)

if args.output:
    output_file.close()
